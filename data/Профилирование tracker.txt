Анализ с использованием утилиты jmap.

- при запуске jmap до создания объектов видим, что heap заполнен на 6,41 Мб.

- после создания 200 тыс. объектов видим, что heap занят на 126 Mб,
 кроме того видим в гистограмме 200 тыс.объектов класса Item на 5 Мб.

 - после выполнения команды findAll видим, что размер heap увеличился еще на 54 Мб
  (как я понимаю разница по большей части из-за внутренних классов VM)

- после удаления 200 тыс. объектов Item, размер heap не изменился, так как VM не запускает GC, поэтому для     наглядности GC был вызван принудительно через командную строку. И видим, что размер heap уменьшился до 3,27 Мб.


Анализ с использованием утилиты jstat.

- при запуске jstat до создания объектов видим, что:
	размер eden составляет 24 Мб - фактически занят на 4Мб
	размер old space составляет 232 Мб - занято 0 Мб
	остальные разделы - по нолям

- после создания 200 тыс. объектов видим, что:
	размер sur1 составляет 16 Мб - и заполнен на 16 Мб
	размер eden составляет 142 Мб - заполнен на 108 Мб
	размер old составляет 102 Мб (уменьшен) - заполнен на 6 Мб
	размер metaspace составялет 1,56 Мб - занят на 1,4 Мб
	minor GC проведена 3 раза - время 13 мс
	major GC не проводилась
	общее время уборки 13 мс

- после выполнения команды findAll видим, что :
	размер syr1 составляет 2 Мб - заполнен на 1,5 Мб
	размер eden 158 Мб - заполнен на 142 Мб
	размер old составляет 100 Мб - заполнен на 36 Мб
	размер metaspace составялет 1,75 Мб - занят на 1,6 Мб
	minor GC проведена 5 раз - время 30 мс
	major GC не проводилась
	общее время уборки 30 мс

- после удаления 200 тыс.объектов (принудительно вызвав GC)
	размер eden 20 Мб - заполнен на 0 Мб
	размер old составляет 20 Мб - заполнен на 4 Мб
	размер metaspace составялет 1,75 Мб - занят на 1,6 Мб
	minor GC проведена 5 раз - время 30 мс
	major GC проведена 1 раз - время 6 мс
	общее время уборки 36 мс

Анализ с использованием утилиты jconsole.

- при запуске jconsole до создания объектов видим, что:
	heap заполнен на 9 Мб (видимо само jconsole добавляет), из них eden - 4 Мб, old - 2 Мб, sur - 3 Мб

- после создания 200 тыс. объектов видим, что:
	heap занят на 124 Мб, из них eden - 104 Мб, sur - 17 Мб, old - 4 Мб

- после выполнения команды findAll видим, что :
	heap занят на 193 Мб, при этом в реальном времени видно как происходит minor gc и меняются значения занимаемой памяти

- после удаления 200 тыс.объектов (принудительно вызвав GC через jconsole)
	размер heap уменьшился до 6 Мб.

Состояние выхода за пределы памяти.

Используя ключ -Xmx20m ограничиваем максимальный размер heap.
Создаем 200 тыс.объектов и получаем OutOfMemoryError. 